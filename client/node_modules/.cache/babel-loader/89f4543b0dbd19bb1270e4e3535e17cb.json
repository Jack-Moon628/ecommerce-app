{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from \"redux-persist\";\nimport logger from 'redux-logger'; //import thunk from \"redux-thunk\";\n\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from \"./root-saga\";\nimport rootReducer from './root-reducer';\nconst sagaMiddleware = createSagaMiddleware(); //const middlewares = [thunk];\n\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(rootSaga);\nexport const persistor = persistStore(store);\nexport default persistor;","map":{"version":3,"sources":["E:/React/crwn-clothing/client/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","logger","createSagaMiddleware","rootSaga","rootReducer","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,MAAP,MAAmB,cAAnB,C,CACA;;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C,C,CAEA;;AACA,MAAMI,WAAW,GAAG,CAACD,cAAD,CAApB;;AAGA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CH,EAAAA,WAAW,CAACI,IAAZ,CAAiBT,MAAjB;AACD;;AAGD,OAAO,MAAMU,KAAK,GAAGb,WAAW,CAACM,WAAD,EAAcL,eAAe,CAAC,GAAGO,WAAJ,CAA7B,CAAzB;AAEPD,cAAc,CAACO,GAAf,CAAmBT,QAAnB;AAEA,OAAO,MAAMU,SAAS,GAAGb,YAAY,CAACW,KAAD,CAA9B;AAEP,eAAeE,SAAf","sourcesContent":["import {createStore, applyMiddleware} from 'redux';\r\nimport { persistStore } from \"redux-persist\";\r\nimport logger from 'redux-logger';\r\n//import thunk from \"redux-thunk\";\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport rootSaga from \"./root-saga\";\r\nimport rootReducer from './root-reducer';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\n//const middlewares = [thunk];\r\nconst middlewares = [sagaMiddleware];\r\n\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n  middlewares.push(logger);\r\n}\r\n\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares))\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport default persistor;"]},"metadata":{},"sourceType":"module"}