{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _defineProperty from\"E:/React/crwn-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"E:/React/crwn-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"E:/React/crwn-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"E:/React/crwn-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"E:/React/crwn-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{connect}from\"react-redux\";import FormInput from'../form-input/form-input.component';import CustomBtn from'../custom-btn/custom-btn.component';import{googleSignInStart as _googleSignInStart,emailSignInStart as _emailSignInStart}from\"../../redux/user/user.actions\";import'./sign-in.styles.scss';var SignIn=function SignIn(_ref){var emailSignInStart=_ref.emailSignInStart,googleSignInStart=_ref.googleSignInStart;var _useState=useState({email:'',password:''}),_useState2=_slicedToArray(_useState,2),userCredentials=_useState2[0],setCredentials=_useState2[1];var email=userCredentials.email,password=userCredentials.password;var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();emailSignInStart(email,password);case 2:case\"end\":return _context.stop();}}},_callee);}));return function handleSubmit(_x){return _ref2.apply(this,arguments);};}();var handleChange=function handleChange(event){var _event$target=event.target,value=_event$target.value,name=_event$target.name;setCredentials(_objectSpread(_objectSpread({},userCredentials),{},_defineProperty({},name,value)));};return/*#__PURE__*/_jsxs(\"div\",{className:\"sign-in\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"I already had an account\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Sign in with your email and passowrd\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(FormInput,{name:\"email\",value:email,type:\"email\",handleChange:handleChange,label:\"email\",required:true}),/*#__PURE__*/_jsx(FormInput,{name:\"password\",value:password,type:\"password\",handleChange:handleChange,label:\"password\",required:true}),/*#__PURE__*/_jsxs(\"div\",{className:\"buttons\",children:[/*#__PURE__*/_jsx(CustomBtn,{type:\"submit\",children:\" Sign In \"}),/*#__PURE__*/_jsx(CustomBtn,{type:\"button\",onClick:googleSignInStart,isGoogleSignIn:true,children:\"Sign In with Google\"})]})]})]});};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{googleSignInStart:function googleSignInStart(){return dispatch(_googleSignInStart());},emailSignInStart:function emailSignInStart(email,password){return dispatch(_emailSignInStart({email:email,password:password}));}};};export default connect(null,mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["E:/React/crwn-clothing/client/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","FormInput","CustomBtn","googleSignInStart","emailSignInStart","SignIn","email","password","userCredentials","setCredentials","handleSubmit","event","preventDefault","handleChange","target","value","name","mapDispatchToProps","dispatch"],"mappings":"0zBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,OAAT,KAAwB,aAAxB,CAGA,MAAOC,CAAAA,SAAP,KAAsB,oCAAtB,CACA,MAAOC,CAAAA,SAAP,KAAsB,oCAAtB,CAEA,OAASC,iBAAiB,GAAjBA,CAAAA,kBAAT,CAA4BC,gBAAgB,GAAhBA,CAAAA,iBAA5B,KAAoD,+BAApD,CAEA,MAAO,uBAAP,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAA6C,IAA1CD,CAAAA,gBAA0C,MAA1CA,gBAA0C,CAAxBD,iBAAwB,MAAxBA,iBAAwB,eAChBJ,QAAQ,CAAC,CAAEO,KAAK,CAAE,EAAT,CAAaC,QAAQ,CAAE,EAAvB,CAAD,CADQ,wCACnDC,eADmD,eAClCC,cADkC,kBAGlDH,CAAAA,KAHkD,CAG/BE,eAH+B,CAGlDF,KAHkD,CAG3CC,QAH2C,CAG/BC,eAH+B,CAG3CD,QAH2C,CAI1D,GAAMG,CAAAA,YAAY,2FAAG,iBAAMC,KAAN,kHACnBA,KAAK,CAACC,cAAN,GACAR,gBAAgB,CAACE,KAAD,CAAQC,QAAR,CAAhB,CAFmB,sDAAH,kBAAZG,CAAAA,YAAY,6CAAlB,CAKA,GAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAF,KAAK,CAAI,mBACNA,KAAK,CAACG,MADA,CACrBC,KADqB,eACrBA,KADqB,CACdC,IADc,eACdA,IADc,CAG5BP,cAAc,gCAAKD,eAAL,wBAAuBQ,IAAvB,CAA8BD,KAA9B,GAAd,CACD,CAJD,CAMA,mBACE,aAAK,SAAS,CAAC,SAAf,wBACE,gDADF,cAEE,8DAFF,cAIE,cAAM,QAAQ,CAAEL,YAAhB,wBACE,KAAC,SAAD,EACE,IAAI,CAAC,OADP,CAEE,KAAK,CAAEJ,KAFT,CAGE,IAAI,CAAC,OAHP,CAIE,YAAY,CAAEO,YAJhB,CAKE,KAAK,CAAC,OALR,CAME,QAAQ,KANV,EADF,cAUE,KAAC,SAAD,EACE,IAAI,CAAC,UADP,CAEE,KAAK,CAAEN,QAFT,CAGE,IAAI,CAAC,UAHP,CAIE,YAAY,CAAEM,YAJhB,CAKE,KAAK,CAAC,UALR,CAME,QAAQ,KANV,EAVF,cAkBE,aAAK,SAAS,CAAC,SAAf,wBACE,KAAC,SAAD,EAAW,IAAI,CAAC,QAAhB,uBADF,cAEE,KAAC,SAAD,EAAW,IAAI,CAAC,QAAhB,CAAyB,OAAO,CAAEV,iBAAlC,CAAqD,cAAc,KAAnE,iCAFF,GAlBF,GAJF,GADF,CAgCD,CA/CD,CAiDA,GAAMc,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,QAAK,CACtCf,iBAAiB,CAAE,mCAAMe,CAAAA,QAAQ,CAACf,kBAAiB,EAAlB,CAAd,EADmB,CAEtCC,gBAAgB,CAAE,0BAACE,KAAD,CAAQC,QAAR,QAChBW,CAAAA,QAAQ,CAACd,iBAAgB,CAAC,CAAEE,KAAK,CAALA,KAAF,CAASC,QAAQ,CAARA,QAAT,CAAD,CAAjB,CADQ,EAFoB,CAAL,EAAnC,CAOA,cAAeP,CAAAA,OAAO,CAAC,IAAD,CAAOiB,kBAAP,CAAP,CAAkCZ,MAAlC,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomBtn from '../custom-btn/custom-btn.component';\r\n \r\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user.actions\";\r\n\r\nimport './sign-in.styles.scss';\r\n\r\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\r\n  const [userCredentials, setCredentials] = useState({ email: '', password: '' });\r\n\r\n  const { email, password} = userCredentials;\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n    emailSignInStart(email, password);\r\n  };\r\n\r\n  const handleChange = event => {\r\n    const {value, name} = event.target;\r\n    \r\n    setCredentials({...userCredentials, [name]: value});\r\n  };\r\n\r\n  return(\r\n    <div className='sign-in'>\r\n      <h2>I already had an account</h2>\r\n      <span>Sign in with your email and passowrd</span>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <FormInput\r\n          name='email'\r\n          value={email}\r\n          type='email'\r\n          handleChange={handleChange}\r\n          label='email'\r\n          required\r\n        />\r\n\r\n        <FormInput\r\n          name='password'\r\n          value={password}\r\n          type='password'\r\n          handleChange={handleChange}\r\n          label='password'\r\n          required\r\n        />\r\n        <div className='buttons'>\r\n          <CustomBtn type='submit'> Sign In </CustomBtn>\r\n          <CustomBtn type='button' onClick={googleSignInStart} isGoogleSignIn>\r\n            Sign In with Google\r\n          </CustomBtn>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  googleSignInStart: () => dispatch(googleSignInStart()),\r\n  emailSignInStart: (email, password) =>\r\n    dispatch(emailSignInStart({ email, password })\r\n  )\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}