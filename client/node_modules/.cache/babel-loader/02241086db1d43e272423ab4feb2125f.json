{"ast":null,"code":"import{createStore,applyMiddleware}from'redux';import{persistStore}from\"redux-persist\";import logger from'redux-logger';//import thunk from \"redux-thunk\";\nimport createSagaMiddleware from'redux-saga';import rootSaga from\"./root-saga\";import rootReducer from'./root-reducer';var sagaMiddleware=createSagaMiddleware();//const middlewares = [thunk];\nvar middlewares=[sagaMiddleware];if(process.env.NODE_ENV==='development'){middlewares.push(logger);}export var store=createStore(rootReducer,applyMiddleware.apply(void 0,middlewares));sagaMiddleware.run(rootSaga);export var persistor=persistStore(store);export default persistor;","map":{"version":3,"sources":["E:/React/crwn-clothing/client/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","logger","createSagaMiddleware","rootSaga","rootReducer","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,OAAQA,WAAR,CAAqBC,eAArB,KAA2C,OAA3C,CACA,OAASC,YAAT,KAA6B,eAA7B,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CACA;AACA,MAAOC,CAAAA,oBAAP,KAAiC,YAAjC,CAEA,MAAOC,CAAAA,QAAP,KAAqB,aAArB,CACA,MAAOC,CAAAA,WAAP,KAAwB,gBAAxB,CAEA,GAAMC,CAAAA,cAAc,CAAGH,oBAAoB,EAA3C,CAEA;AACA,GAAMI,CAAAA,WAAW,CAAG,CAACD,cAAD,CAApB,CAGA,GAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,aAA7B,CAA4C,CAC1CH,WAAW,CAACI,IAAZ,CAAiBT,MAAjB,EACD,CAGD,MAAO,IAAMU,CAAAA,KAAK,CAAGb,WAAW,CAACM,WAAD,CAAcL,eAAe,MAAf,QAAmBO,WAAnB,CAAd,CAAzB,CAEPD,cAAc,CAACO,GAAf,CAAmBT,QAAnB,EAEA,MAAO,IAAMU,CAAAA,SAAS,CAAGb,YAAY,CAACW,KAAD,CAA9B,CAEP,cAAeE,CAAAA,SAAf","sourcesContent":["import {createStore, applyMiddleware} from 'redux';\r\nimport { persistStore } from \"redux-persist\";\r\nimport logger from 'redux-logger';\r\n//import thunk from \"redux-thunk\";\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport rootSaga from \"./root-saga\";\r\nimport rootReducer from './root-reducer';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\n//const middlewares = [thunk];\r\nconst middlewares = [sagaMiddleware];\r\n\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n  middlewares.push(logger);\r\n}\r\n\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares))\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport default persistor;"]},"metadata":{},"sourceType":"module"}